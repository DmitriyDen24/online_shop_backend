/*
 * This file is generated by jOOQ.
 */
package com.lernapi.myapp.db.tables.records;


import com.lernapi.myapp.db.tables.Categories;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoriesRecord extends UpdatableRecordImpl<CategoriesRecord> implements Record2<BigDecimal, String> {

    private static final long serialVersionUID = -1754041653;

    /**
     * Setter for <code>online_shop.categories.categories_id</code>.
     */
    public void setCategoriesId(BigDecimal value) {
        set(0, value);
    }

    /**
     * Getter for <code>online_shop.categories.categories_id</code>.
     */
    public BigDecimal getCategoriesId() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>online_shop.categories.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>online_shop.categories.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<BigDecimal> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<BigDecimal, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<BigDecimal, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return Categories.CATEGORIES.CATEGORIES_ID;
    }

    @Override
    public Field<String> field2() {
        return Categories.CATEGORIES.NAME;
    }

    @Override
    public BigDecimal component1() {
        return getCategoriesId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public BigDecimal value1() {
        return getCategoriesId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public CategoriesRecord value1(BigDecimal value) {
        setCategoriesId(value);
        return this;
    }

    @Override
    public CategoriesRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CategoriesRecord values(BigDecimal value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoriesRecord
     */
    public CategoriesRecord() {
        super(Categories.CATEGORIES);
    }

    /**
     * Create a detached, initialised CategoriesRecord
     */
    public CategoriesRecord(BigDecimal categoriesId, String name) {
        super(Categories.CATEGORIES);

        set(0, categoriesId);
        set(1, name);
    }
}
