/*
 * This file is generated by jOOQ.
 */
package com.lernapi.myapp.db.tables;


import com.lernapi.myapp.db.Keys;
import com.lernapi.myapp.db.OnlineShop;
import com.lernapi.myapp.db.tables.records.ProductsToCategoriesRecord;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * Товары в категориях
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductsToCategories extends TableImpl<ProductsToCategoriesRecord> {

    private static final long serialVersionUID = -807189541;

    /**
     * The reference instance of <code>online_shop.products_to_categories</code>
     */
    public static final ProductsToCategories PRODUCTS_TO_CATEGORIES = new ProductsToCategories();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductsToCategoriesRecord> getRecordType() {
        return ProductsToCategoriesRecord.class;
    }

    /**
     * The column <code>online_shop.products_to_categories.products_to_category_id</code>.
     */
    public final TableField<ProductsToCategoriesRecord, BigDecimal> PRODUCTS_TO_CATEGORY_ID = createField(DSL.name("products_to_category_id"), org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>online_shop.products_to_categories.category_id</code>.
     */
    public final TableField<ProductsToCategoriesRecord, BigInteger> CATEGORY_ID = createField(DSL.name("category_id"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(200), this, "");

    /**
     * The column <code>online_shop.products_to_categories.product_id</code>.
     */
    public final TableField<ProductsToCategoriesRecord, BigInteger> PRODUCT_ID = createField(DSL.name("product_id"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(200), this, "");

    /**
     * Create a <code>online_shop.products_to_categories</code> table reference
     */
    public ProductsToCategories() {
        this(DSL.name("products_to_categories"), null);
    }

    /**
     * Create an aliased <code>online_shop.products_to_categories</code> table reference
     */
    public ProductsToCategories(String alias) {
        this(DSL.name(alias), PRODUCTS_TO_CATEGORIES);
    }

    /**
     * Create an aliased <code>online_shop.products_to_categories</code> table reference
     */
    public ProductsToCategories(Name alias) {
        this(alias, PRODUCTS_TO_CATEGORIES);
    }

    private ProductsToCategories(Name alias, Table<ProductsToCategoriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductsToCategories(Name alias, Table<ProductsToCategoriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Товары в категориях"), TableOptions.table());
    }

    public <O extends Record> ProductsToCategories(Table<O> child, ForeignKey<O, ProductsToCategoriesRecord> key) {
        super(child, key, PRODUCTS_TO_CATEGORIES);
    }

    @Override
    public Schema getSchema() {
        return OnlineShop.ONLINE_SHOP;
    }

    @Override
    public UniqueKey<ProductsToCategoriesRecord> getPrimaryKey() {
        return Keys.PRODUCTS_TO_CATEGORY_PK;
    }

    @Override
    public List<UniqueKey<ProductsToCategoriesRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductsToCategoriesRecord>>asList(Keys.PRODUCTS_TO_CATEGORY_PK);
    }

    @Override
    public List<ForeignKey<ProductsToCategoriesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProductsToCategoriesRecord, ?>>asList(Keys.PRODUCTS_TO_CATEGORIES__FK_158205804874597, Keys.PRODUCTS_TO_CATEGORIES__FK_157868449927884);
    }

    public Categories categories() {
        return new Categories(this, Keys.PRODUCTS_TO_CATEGORIES__FK_158205804874597);
    }

    public Products products() {
        return new Products(this, Keys.PRODUCTS_TO_CATEGORIES__FK_157868449927884);
    }

    @Override
    public ProductsToCategories as(String alias) {
        return new ProductsToCategories(DSL.name(alias), this);
    }

    @Override
    public ProductsToCategories as(Name alias) {
        return new ProductsToCategories(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductsToCategories rename(String name) {
        return new ProductsToCategories(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductsToCategories rename(Name name) {
        return new ProductsToCategories(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<BigDecimal, BigInteger, BigInteger> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
